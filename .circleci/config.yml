aliases :
  - &update-yarn
    name: update-yarn
    command: 'sudo npm install -g yarn@latest'

  - &restore-yarn-cache
    keys :
      # when lock file changes, use increasingly general patterns to restore cache
      - node-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - node-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
      - node-{{ .Environment.CACHE_VERSION }}-
  - &save-yarn-cache
    key : node-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths :
      - ./node_modules
  - &yarn-install
    name : Installing yarn packages
    command : yarn
  - &lint
    name: Checking code style
    command: yarn lint --ci --runInBand
  - &test
    name: Running all tests
    command: yarn test --ci --runInBand

defaults: &defaults
  working_directory: ~/prosemirror # directory where steps will run
  docker: # run the steps with Docker
    - image: circleci/node:10.17.0 # ...with this image as the primary container; this is where all `steps` will run

version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  lint: # runs not using Workflows must have a `build` job as entry point
    <<: *defaults
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run: *update-yarn
      - restore_cache: *restore-yarn-cache
      - run: *yarn-install
      - save_cache: *save-yarn-cache
      - run: *lint
  test:
    <<: *defaults
    steps:
      - checkout # special step to check out source code to working directory
      - run: *update-yarn
      - restore_cache: *restore-yarn-cache
      - run: *yarn-install
      - save_cache: *save-yarn-cache
      - run: *test
      - store_test_results:
          path: ./junit.xml

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test
